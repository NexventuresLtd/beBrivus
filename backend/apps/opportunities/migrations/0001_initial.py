# Generated by Django 5.2.6 on 2025-09-12 07:30

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OpportunityCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Opportunity Categories',
                'db_table': 'opportunity_categories',
            },
        ),
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('short_description', models.CharField(max_length=300)),
                ('organization', models.CharField(max_length=200)),
                ('organization_logo', models.ImageField(blank=True, null=True, upload_to='organizations/')),
                ('organization_website', models.URLField(blank=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('remote_allowed', models.BooleanField(default=False)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('requirements', models.TextField(blank=True)),
                ('benefits', models.TextField(blank=True)),
                ('application_process', models.TextField(blank=True)),
                ('required_documents', models.TextField(blank=True)),
                ('application_deadline', models.DateTimeField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('closed', 'Closed'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='intermediate', max_length=20)),
                ('external_url', models.URLField(blank=True)),
                ('ai_imported', models.BooleanField(default=False)),
                ('verified', models.BooleanField(default=False)),
                ('featured', models.BooleanField(default=False)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('applications_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_opportunities', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunities', to='opportunities.opportunitycategory')),
            ],
            options={
                'db_table': 'opportunities',
                'ordering': ['-featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OpportunityRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('reasons', models.JSONField(default=list)),
                ('clicked', models.BooleanField(default=False)),
                ('applied', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='opportunities.opportunity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'opportunity_recommendations',
                'ordering': ['-score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OpportunityView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='opportunities.opportunity')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'opportunity_views',
            },
        ),
        migrations.CreateModel(
            name='SavedOpportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='opportunities.opportunity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_opportunities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'saved_opportunities',
            },
        ),
        migrations.AddIndex(
            model_name='opportunity',
            index=models.Index(fields=['status', 'application_deadline'], name='opportuniti_status_bb18f9_idx'),
        ),
        migrations.AddIndex(
            model_name='opportunity',
            index=models.Index(fields=['category', 'status'], name='opportuniti_categor_e83cee_idx'),
        ),
        migrations.AddIndex(
            model_name='opportunity',
            index=models.Index(fields=['featured', 'status'], name='opportuniti_feature_b3cb10_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='opportunityrecommendation',
            unique_together={('user', 'opportunity')},
        ),
        migrations.AlterUniqueTogether(
            name='opportunityview',
            unique_together={('opportunity', 'user', 'ip_address')},
        ),
        migrations.AlterUniqueTogether(
            name='savedopportunity',
            unique_together={('user', 'opportunity')},
        ),
    ]
