# Generated by Django 5.2.6 on 2025-09-22 10:30

import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ForumCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#6366f1', max_length=7)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Forum Categories',
                'db_table': 'forum_categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('discussion_type', models.CharField(choices=[('question', 'Question'), ('discussion', 'Discussion'), ('announcement', 'Announcement'), ('job_posting', 'Job Posting'), ('resource_sharing', 'Resource Sharing')], default='discussion', max_length=20)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('replies_count', models.PositiveIntegerField(default=0)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('ai_summary', models.TextField(blank=True)),
                ('ai_keywords', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_discussions', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussions', to='forum.forumcategory')),
            ],
            options={
                'db_table': 'forum_discussions',
                'ordering': ['-is_pinned', '-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('is_solution', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_replies', to=settings.AUTH_USER_MODEL)),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='forum.discussion')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_replies', to='forum.reply')),
            ],
            options={
                'db_table': 'forum_replies',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ForumModerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('pin', 'Pin Discussion'), ('unpin', 'Unpin Discussion'), ('lock', 'Lock Discussion'), ('unlock', 'Unlock Discussion'), ('delete', 'Delete Content'), ('edit', 'Edit Content'), ('mark_solution', 'Mark as Solution'), ('unmark_solution', 'Unmark as Solution'), ('ai_flag', 'AI Flagged Content')], max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('discussion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum.discussion')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to=settings.AUTH_USER_MODEL)),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='forum.reply')),
            ],
            options={
                'db_table': 'forum_moderation_logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiscussionLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('discussion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='forum.discussion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='forum.reply')),
            ],
            options={
                'db_table': 'forum_likes',
            },
        ),
        migrations.CreateModel(
            name='UserForumProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discussions_count', models.PositiveIntegerField(default=0)),
                ('replies_count', models.PositiveIntegerField(default=0)),
                ('likes_received', models.PositiveIntegerField(default=0)),
                ('solutions_count', models.PositiveIntegerField(default=0)),
                ('reputation_score', models.IntegerField(default=0)),
                ('email_notifications', models.BooleanField(default=True)),
                ('show_online_status', models.BooleanField(default=True)),
                ('is_moderator', models.BooleanField(default=False)),
                ('can_pin_discussions', models.BooleanField(default=False)),
                ('can_lock_discussions', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='forum_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_forum_profiles',
            },
        ),
        migrations.CreateModel(
            name='DiscussionView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussion_views', to='forum.discussion')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'forum_discussion_views',
                'unique_together': {('discussion', 'user', 'ip_address')},
            },
        ),
        migrations.AddIndex(
            model_name='discussion',
            index=models.Index(fields=['category', 'is_pinned'], name='forum_discu_categor_c58084_idx'),
        ),
        migrations.AddIndex(
            model_name='discussion',
            index=models.Index(fields=['last_activity'], name='forum_discu_last_ac_c6b9d9_idx'),
        ),
        migrations.AddIndex(
            model_name='discussion',
            index=models.Index(fields=['created_at'], name='forum_discu_created_f30f62_idx'),
        ),
        migrations.AddConstraint(
            model_name='discussionlike',
            constraint=models.CheckConstraint(condition=models.Q(('discussion__isnull', False), ('reply__isnull', False), _connector='OR'), name='like_either_discussion_or_reply'),
        ),
        migrations.AlterUniqueTogether(
            name='discussionlike',
            unique_together={('user', 'discussion'), ('user', 'reply')},
        ),
    ]
