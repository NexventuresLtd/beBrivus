# Generated by Django 5.2.6 on 2025-09-12 07:30

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MentorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_position', models.CharField(max_length=200)),
                ('current_company', models.CharField(max_length=200)),
                ('industry', models.CharField(max_length=100)),
                ('expertise_level', models.CharField(choices=[('junior', 'Junior (1-3 years)'), ('mid', 'Mid-level (3-7 years)'), ('senior', 'Senior (7-15 years)'), ('executive', 'Executive (15+ years)')], max_length=20)),
                ('years_of_experience', models.PositiveIntegerField()),
                ('specializations', models.TextField(help_text='Areas of expertise')),
                ('mentoring_experience', models.TextField(blank=True)),
                ('languages_spoken', models.CharField(default='English', max_length=200)),
                ('available_for_mentoring', models.BooleanField(default=True)),
                ('max_mentees', models.PositiveIntegerField(default=5)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('free_sessions_offered', models.PositiveIntegerField(default=1)),
                ('preferred_mentee_level', models.CharField(blank=True, max_length=100)),
                ('communication_preferences', models.TextField(blank=True)),
                ('verified_mentor', models.BooleanField(default=False)),
                ('featured_mentor', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('total_mentees', models.PositiveIntegerField(default=0)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'mentor_profiles',
            },
        ),
        migrations.CreateModel(
            name='MentorshipRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('goals', models.TextField(help_text='What the mentee hopes to achieve')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('mentor_response', models.TextField(blank=True)),
                ('preferred_session_type', models.CharField(choices=[('video', 'Video Call'), ('chat', 'Text Chat'), ('email', 'Email'), ('in_person', 'In Person')], default='video', max_length=20)),
                ('duration_requested', models.PositiveIntegerField(default=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentorship_requests', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentorship_requests', to='mentors.mentorprofile')),
            ],
            options={
                'db_table': 'mentorship_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MentorReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', models.TextField()),
                ('communication_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('knowledge_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('helpfulness_rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('would_recommend', models.BooleanField(default=True)),
                ('public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentorship_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='mentors.mentorshiprequest')),
            ],
            options={
                'db_table': 'mentor_reviews',
            },
        ),
        migrations.CreateModel(
            name='MentorshipSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('video', 'Video Call'), ('chat', 'Text Chat'), ('email', 'Email'), ('in_person', 'In Person')], max_length=20)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('meeting_link', models.URLField(blank=True)),
                ('meeting_id', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('agenda', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('mentor_notes', models.TextField(blank=True)),
                ('mentee_notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentorship_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='mentors.mentorshiprequest')),
            ],
            options={
                'db_table': 'mentorship_sessions',
                'ordering': ['-scheduled_start'],
            },
        ),
        migrations.CreateModel(
            name='MentorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='mentors.mentorprofile')),
            ],
            options={
                'db_table': 'mentor_availability',
                'unique_together': {('mentor', 'day_of_week', 'start_time')},
            },
        ),
    ]
